# -*- coding: utf-8 -*-
"""Copy of Untitled51.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zxgOsUL7VjH6V3o28MHbgN7aWd7_jn9Z
"""

# LOading Data

import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
music_data = pd.read_csv('/content/music.csv')
music_data

# Prepaire the data of analysis
X = music_data.drop(columns=['genre'])
X

y = music_data['genre']
y

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Create the model
model = DecisionTreeClassifier()
model.fit(X,y)
model.predict([[21,1],[22,0]])
predictions = model.predict([[21,1],[22,0]])
predictions

# the accuracy of the model
model = DecisionTreeClassifier()
model.fit(X_train,y_train)
predictions = model.predict(X_test)
score = accuracy_score(y_test, predictions)
score

# persisting Models:
import joblib
joblib.dump(model, 'music-recommender.joblib')

model = joblib.load('music-recommender.joblib')
predictions = model.predict([[21,1]])
predictions

# Visualizing Decision Tree:
from sklearn import tree
tree.export_graphviz(model, out_file='music-recommender.dot',
                     feature_names=['age', 'gender'],
                     class_names=sorted(y.unique()),
                     label='all',
                     rounded=True,
                     filled=True)

import graphviz

with open("music-recommender.dot") as f:
    dot_graph = f.read()

graphviz.Source(dot_graph)